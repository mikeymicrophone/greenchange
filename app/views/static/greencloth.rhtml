<% content_for :style do %>
p, td {font-family: georgia, serif;
  font-size: 85%;
  line-height: 1.5em;
}
body {
  padding: 1em;
  background:#ccc;
}
#maintable {
  background: #fafafa;
  border-right: 4px solid #aaa;
  border-bottom: 4px solid #aaa;
}
td.header {
 color: #999;
 font-size: 1.3em;
 border-left: 4px solid #ccc;
 padding-left: 0.5em;
}
td.code {
  font-family: monospace;
  background: #dfd;
  vertical-align: top;
  padding: 3px;
}
td.rendered {
  background: #eef;
  vertical-align: top;
  padding: 3px;
}
p > code {
  white-space: pre;
}
<% end %>
<%

def row(text)
  %Q(
<tr>
  <td class='code'><pre>#{text.gsub('<','&lt;')}</pre></td>
  <td><b>&rarr;</b></td>
  <td class='rendered'>#{GreenCloth.new(text).to_html}</td>
</tr>
  )
end

def header(text)
  %Q(
<tr>
  <td class='header' colspan="3">#{text}</td>
</tr>
  )
end

%>

<table cellpadding='0' cellspacing='10' id='maintable'>
<tr><td colspan="3">
Crabgrass uses a <a href="http://en.wikipedia.org/wiki/Lightweight_markup_language">lightweight markup language<a> called GreenCloth. There are many such markup languages, all with the same purpose: convert plain text into formatted HTML. 
</tr></td>
<%=  

  header('Paragraphs and line breaks') +
  row(<<END) +
Paragraphs
===========

Paragraphs are separated by a blank line. This is the first paragraph.

Followed by another very fine paragraph. 

Line breaks
-----------

Paragraphs will
contain line breaks
everywhere you type return.
END

  header('Lists') +
  row(<<END) +
* rainbows
** are difficult to touch
** make me happy
* ninjas are cool
* crows are smart

# first, overthrow capitalism.
# then, relax.

# or perhaps take a nap instead.
END

  header('Blockquotes') +
  row(<<END) +
Blockquotes are indented text.
bq. This is a blockquote.

> this is also a blockquote
> in 'email' style.

  this is a blockquote
  that is formed by starting the
  paragraph with spaces.
END

  header('Formatting') +
  row(<<END) +
_emphasis_, __italicized__, *strong*, **bold** 
??citation??, -deleted text-, +inserted text+ 
^superscript^, ~subscript~ 
@code@, %(classname)span%
END

  header('Links') +
  row(<<END) +
# URLs becomes links http://riseup.net
# Text [in brackets] is assumed to be a page name.
# You can also point to a [different page -> trees].
# To specify a different group:
** [fruit/orange] is different from [colors/orange] 
** [orange's -> fruit/orange] is different
   from [orange's -> colors/orange] 
# Instead of the page name, you can use the
  page id number: [oranges -> 342] 
# If you want a square bracket in your text, you can
  disable linking \\[like so\\].
END

  header('Headings') +
  row(<<END) +
h1. Top level

h2. Second level

h3. Third level
END
  row(<<END) +
Top Level
=========

Second Level
------------
END

  header('Tables') +
  row(<<END) +
| bird      | color  | locomotion  |
| macaw     | red    | fly  |
| kakapo    | green  | walk |
| penguin   | black  | swim |
END
  row(<<END) +
|_. bird    |_. color |_. locomotion  |
| macaw     | red     | fly  |
| kakapo    | green   | walk |
| penguin   | black   | swim |
END

  header('Preformatted Code') +
  row(<<END) +
Here is some @inline code that is *not* processed@ for formatting.

<pre>
this paragraph is
    preformatted
         with some really impressive text.
</pre>

<code>
def fibonacci(max)
  i1, i2 = 1, 1
  while i1 <= max
    yield i1
    i1, i2 = i2, i1+i2
  end
end
</code>

/--
another way to make blocks
\\--

@@ a single code block line
END

  header('Hanging Indent') +
  row(<<END) 
If you have a single line of text
  followed by some indented text,
  It will have a hanging indent.
END

%>

<tr><td>
For more details, see the <a href="http://hobix.com/textile/quick.html">quick guide to textile</a>
</td></tr>
</table>

